#include <stdio.h>
#include <stdlib.h>

#define MAX 100
typedef struct stack
{
	char elist[MAX];
	int n;
}Stack;
void InitStack(Stack &s)
{
	s.n=0;
}
int StackEmpty(Stack s)
{
	return s.n==0;
}
void Push(Stack &s,char e)
{
	s.elist[s.n++]=e;
}
void Pop(Stack &s,char &e)
{
	e=s.elist[--s.n];
}

void Conversion(int n,int x)
{
	char e;
	Stack s;
	InitStack(s);
	while(n!=0)
	{
		if(n%x<=9)
			Push(s,n%x+'0');
		else
			Push(s,n%x+'A'-10);
		n=n/x;
	}
	while(!StackEmpty(s))
	{
		Pop(s,e);
		printf("%c",e);
	}
}
void main()
{	char expect[MAX];
	printf("16的期望结果，二进制:%s",itoa(16,expect,2));
	printf(",八进制:%s",itoa(16,expect,8));
	printf(",十六进制:%s\n",itoa(16,expect,16));
	printf("16的实际结果，二进制:");Conversion(16,2);
	printf(",八进制:");Conversion(16,8);
	printf(",十六进制:");Conversion(16,16);
	printf("\n");
	printf("65536的期望结果，二进制:%s",itoa(65536,expect,2));
	printf(",八进制:%s",itoa(65536,expect,8));
	printf(",十六进制:%s\n",itoa(65536,expect,16));
	printf("65536的实际结果，二进制:");Conversion(65536,2);
	printf(",八进制:");Conversion(65536,8);
	printf(",十六进制:");Conversion(65536,16);
	printf("\n");

}
