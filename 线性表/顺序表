#include <stdio.h>
#include <stdlib.h>

#define MAXSIZE 100
#define ERROR -1
#define OK 1
#define OVERFLOW -1

#define ElemType int
#define Status int

typedef struct sqlist
{
	ElemType *elem;
	int length;
}SqList;

Status InitList(SqList &L)
{
	L.elem=new ElemType[MAXSIZE];
	if(!L.elem) exit(OVERFLOW);
	L.length=0;
	return OK;
}
Status GetElem(SqList L,int i,ElemType &e)
{
	if(i<1||i>L.length)
		return ERROR;
	e=L.elem[i-1];
	return OK;
}
Status LocateElem(SqList L,ElemType e)
{
	int i;
	for(i=0;i<L.length;i++)
		if(L.elem[i]==e)
			return i+1;
		return 0;
}
Status ListInsert(SqList &L,int i,ElemType e)
{
	int j;
	if(i<1||i>L.length+1)
		return ERROR;
	if(L.length==MAXSIZE)
		return ERROR;
	for(j=L.length-1;j>=i-1;j--)
		L.elem[j+1]=L.elem[j];
	L.elem[i-1]=e;
	++L.length;
	return OK;
}
Status ListDelete(SqList &L,int i,ElemType &e)
{
	int j;
	if(i<1||i>L.length)
		return ERROR;
	e=L.elem[i-1];
	for(j=i;j<=L.length-1;j++)
		L.elem[j-1]=L.elem[j];
	--L.length;
	return OK;
}
void main()
{
	SqList L;
	ElemType e;
	int tmp;
	InitList(L);
	ListInsert(L,1,10);ListInsert(L,2,20);ListInsert(L,3,30);

	GetElem(L,1,e);printf("%d\n",e);

	tmp=LocateElem(L,20);printf("%d\n",tmp);
	tmp=LocateElem(L,40);printf("%d\n",tmp);

	ListDelete(L,1,e);printf("%d\n",e);
	ListDelete(L,1,e);printf("%d\n",e);
}
